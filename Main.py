import logging
import os
from aiogram import Bot, Dispatcher, Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web

# –°—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
RAILWAY_STATIC_URL = os.getenv('RAILWAY_STATIC_URL')  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è Railway

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ webhook
WEBHOOK_HOST = RAILWAY_STATIC_URL  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π URL –æ—Ç Railway
WEBHOOK_PATH = f'/webhook/{TOKEN}'
WEBHOOK_URL = f'{WEBHOOK_HOST}{WEBHOOK_PATH}'

WEBAPP_HOST = '0.0.0.0'
WEBAPP_PORT = int(os.getenv('PORT', default=8000))

@dp.message(Command("start"))
async def send_welcome(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! ü§ñ –Ø ‚Äî –≤–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç.")

@dp.message()
async def echo(message: Message):
    await message.answer(message.text)

# –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
async def on_startup():
    logging.info("–ó–∞–≥—Ä—É–∑–∫–∞ webhook...")
    await bot.set_webhook(WEBHOOK_URL, drop_pending_updates=True)

# –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –±–æ—Ç–∞
async def on_shutdown():
    logging.info("–£–¥–∞–ª–µ–Ω–∏–µ webhook...")
    await bot.delete_webhook()

# –°–æ–∑–¥–∞–Ω–∏–µ aiohttp –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = web.Application()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
async def on_startup_app(app):
    await on_startup()

async def on_shutdown_app(app):
    await on_shutdown()

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.router.add_post(WEBHOOK_PATH, lambda request: dp.feed_webhook_update(bot, request))

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    app.on_startup.append(on_startup_app)
    app.on_shutdown.append(on_shutdown_app)

    # –ó–∞–ø—É—Å–∫ aiohttp —Å–µ—Ä–≤–µ—Ä–∞
    web.run_app(
        app,
        host=WEBAPP_HOST,
        port=WEBAPP_PORT,
    )
